{"version":3,"sources":["script.js"],"names":["listsContainer","document","querySelector","newListForm","newListInput","deleteListButton","listDisplayContainer","listTitleElement","listCountElement","tasksContainer","LOCAL_STORAGE_LIST_KEY","LOCAL_STORAGE_SELECTED_LIST_ID_KEY","lists","JSON","parse","localStorage","getItem","selectedListId","createList","name","id","Date","now","toString","tasks","saveAndRender","save","render","setItem","stringify","clearElement","renderLists","selectedList","find","list","style","display","innerText","forEach","listElement","createElement","dataset","listId","classList","add","appendChild","element","firstChild","removeChild","addEventListener","e","target","tagName","toLowerCase","filter","preventDefault","listName","value","push"],"mappings":"AAAA,aACA,IAAMA,eAAiBC,SAASC,cAAc,gBACxCC,YAAcF,SAASC,cAAc,wBACrCE,aAAeH,SAASC,cAAc,yBACtCG,iBAAmBJ,SAASC,cAAc,6BAE1CI,qBAAuBL,SAASC,cAAc,iCAC9CK,iBAAmBN,SAASC,cAAc,qBAC1CM,iBAAmBP,SAASC,cAAc,qBAC1CO,eAAiBR,SAASC,cAAc,gBAKxCQ,uBAAyB,aACzBC,mCAAqC,sBACvCC,MAAQC,KAAKC,MAAMC,aAAaC,QAAQN,0BAA4B,GACpEO,eAAiBF,aAAaC,QAAQL,oCA4B1C,SAASO,WAAWC,GACjB,MAAO,CAAEC,GAAIC,KAAKC,MAAMC,WAAYJ,KAAMA,EAAMK,MAAO,GAC1D,CAEA,SAASC,gBACLC,OACAC,QACJ,CAEA,SAASD,OACLX,aAAaa,QAAQlB,uBAAwBG,KAAKgB,UAAUjB,QAC5DG,aAAaa,QAAQjB,mCAAoCM,eAC7D,CAEA,SAASU,SACLG,aAAa9B,gBACb+B,cAGA,IAAMC,EAAepB,MAAMqB,MAAK,SAAAC,GAAI,OAAIA,EAAKd,KAAOH,cAAc,IAC5C,MAAlBA,eACAX,qBAAqB6B,MAAMC,QAAU,QAGrC9B,qBAAqB6B,MAAMC,QAAU,GACrC7B,iBAAiB8B,UAAYL,EAAab,KAElD,CAGA,SAASY,cAELnB,MAAM0B,SAAQ,SAAAJ,GACV,IAAMK,EAActC,SAASuC,cAAc,MAC3CD,EAAYE,QAAQC,OAASR,EAAKd,GAClCmB,EAAYI,UAAUC,IAAI,aAC1BL,EAAYF,UAAYH,EAAKf,KAEzBe,EAAKd,KAAOH,gBACZsB,EAAYI,UAAUC,IAAI,eAE9B5C,eAAe6C,YAAYN,EAC/B,GACJ,CAEA,SAAST,aAAagB,GAClB,KAAOA,EAAQC,YACXD,EAAQE,YAAYF,EAAQC,WAEpC,CA1EA/C,eAAeiD,iBAAiB,SAAS,SAAAC,GACE,OAAnCA,EAAEC,OAAOC,QAAQC,gBACjBpC,eAAiBiC,EAAEC,OAAOV,QAAQC,OAClCjB,gBAER,IAGApB,iBAAiB4C,iBAAiB,SAAS,SAAAC,GACvCtC,MAAQA,MAAM0C,QAAO,SAAApB,GAAI,OAAIA,EAAKd,KAAOH,cAAc,IACvDA,eAAiB,KACjBQ,eACJ,IAGAtB,YAAY8C,iBAAiB,UAAU,SAAAC,GACnCA,EAAEK,iBACF,IAAMC,EAAWpD,aAAaqD,MAC9B,GAAgB,MAAZD,GAAiC,KAAbA,EAAxB,CACA,IAAMtB,EAAOhB,WAAWsC,GACxBpD,aAAaqD,MAAQ,KACrB7C,MAAM8C,KAAKxB,GACXT,eAJyC,CAK7C,IAqDAE","file":"script.js","sourcesContent":["//doing the list first\r\nconst listsContainer = document.querySelector('[data-lists]')\r\nconst newListForm = document.querySelector('[data-new-list-form]')\r\nconst newListInput = document.querySelector('[data-new-list-input]')\r\nconst deleteListButton = document.querySelector('[data-delete-list-button]')\r\n//tasks list\r\nconst listDisplayContainer = document.querySelector('[data-list-display-container]')\r\nconst listTitleElement = document.querySelector('[data-list-title]')\r\nconst listCountElement = document.querySelector('[data-list-count]')\r\nconst tasksContainer = document.querySelector('[data-tasks]')\r\n\r\n\r\n\r\n//local storage\r\nconst LOCAL_STORAGE_LIST_KEY = 'task.lists'\r\nconst LOCAL_STORAGE_SELECTED_LIST_ID_KEY = 'task.selectedListId'\r\nlet lists = JSON.parse(localStorage.getItem(LOCAL_STORAGE_LIST_KEY)) || []\r\nlet selectedListId = localStorage.getItem(LOCAL_STORAGE_SELECTED_LIST_ID_KEY) //to jest od klikonio i brania jaki to jest ciul \r\n\r\n//selects a clicked list and gives it the class of active\r\nlistsContainer.addEventListener('click', e => {\r\n    if (e.target.tagName.toLowerCase() === 'li') {\r\n        selectedListId = e.target.dataset.listId\r\n        saveAndRender()\r\n    }\r\n})\r\n\r\n//delete button for active list\r\ndeleteListButton.addEventListener('click', e => {\r\n    lists = lists.filter(list => list.id !== selectedListId)\r\n    selectedListId = null\r\n    saveAndRender()\r\n})\r\n\r\n// adds a new list to the other visible lists\r\nnewListForm.addEventListener('submit', e => {\r\n    e.preventDefault()\r\n    const listName = newListInput.value\r\n    if (listName == null || listName === '') return\r\n    const list = createList(listName)\r\n    newListInput.value = null\r\n    lists.push(list)\r\n    saveAndRender()\r\n})\r\n\r\nfunction createList(name) {\r\n   return { id: Date.now().toString(), name: name, tasks: [] }\r\n}\r\n\r\nfunction saveAndRender() {\r\n    save()\r\n    render()\r\n}\r\n\r\nfunction save() {\r\n    localStorage.setItem(LOCAL_STORAGE_LIST_KEY, JSON.stringify(lists))\r\n    localStorage.setItem(LOCAL_STORAGE_SELECTED_LIST_ID_KEY, selectedListId)\r\n}\r\n\r\nfunction render() {\r\n    clearElement(listsContainer)\r\n    renderLists()\r\n\r\n    //removes active list and its tasks list\r\n    const selectedList = lists.find(list => list.id === selectedListId)\r\n    if (selectedListId == null) {\r\n        listDisplayContainer.style.display = 'none'\r\n    } else {\r\n        //changes tasks title to the active list name\r\n        listDisplayContainer.style.display = ''\r\n        listTitleElement.innerText = selectedList.name\r\n    }\r\n}\r\n\r\n//for adding new list items to actual list \r\nfunction renderLists() {\r\n    // <li class=\"list-name\">work</li>\r\n    lists.forEach(list => {\r\n        const listElement = document.createElement('li')\r\n        listElement.dataset.listId = list.id\r\n        listElement.classList.add('list-name')\r\n        listElement.innerText = list.name\r\n        //adds active class to selected list\r\n        if (list.id === selectedListId) {\r\n            listElement.classList.add('active-list')\r\n        }\r\n        listsContainer.appendChild(listElement)\r\n    })\r\n}\r\n\r\nfunction clearElement(element) {\r\n    while (element.firstChild) {\r\n        element.removeChild(element.firstChild)\r\n    }\r\n}\r\n\r\nrender()"]}